# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = [
  # JankyBorders has a built-in detection of already running process,
  # so it won't be run twice on AeroSpace restart
  'exec-and-forget borders active_color=0xffe1e3e4 inactive_color=0xff494d64 width=5 blacklist="iPhone Mirroring"',
]

# exec-on-workspace-change = [
#   '/bin/bash',
#   '-c',
#   'sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE',
# ]

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 50

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 5
inner.vertical = 5
outer.left = 5
outer.bottom = 5
# outer.top = [{ monitor.built-in = 5 }, 40]
outer.top = 5
outer.right = 5

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]
cmd-h = []     # Disable "hide application"
cmd-alt-h = [] # Disable "hide others"

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
alt-slash = 'layout tiles horizontal vertical'
alt-comma = 'layout accordion horizontal vertical'
alt-space = ['layout floating tiling', 'mode main']

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
alt-h = 'focus left'
alt-j = 'focus down'
alt-k = 'focus up'
alt-l = 'focus right'
alt-ctrl-f = 'fullscreen'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
alt-shift-h = 'move left'
alt-shift-j = 'move down'
alt-shift-k = 'move up'
alt-shift-l = 'move right'
alt-cmd-tab = [
  'move-node-to-monitor --wrap-around next',
  'focus-monitor --wrap-around next',
]

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
alt-shift-minus = 'resize smart -200'
alt-shift-equal = 'resize smart +200'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
# 数字工作区 1-0 (只保留数字工作区)
alt-1 = 'workspace 1'
alt-2 = 'workspace 2'
alt-3 = 'workspace 3'
alt-4 = 'workspace 4'
alt-5 = 'workspace 5'
alt-6 = 'workspace 6'
alt-7 = 'workspace 7'
alt-8 = 'workspace 8'
alt-9 = 'workspace 9'
alt-0 = 'workspace 0'

# Summon workspace to current monitor (数字工作区)
alt-ctrl-1 = 'summon-workspace 1'
alt-ctrl-2 = 'summon-workspace 2'
alt-ctrl-3 = 'summon-workspace 3'
alt-ctrl-4 = 'summon-workspace 4'
alt-ctrl-5 = 'summon-workspace 5'
alt-ctrl-6 = 'summon-workspace 6'
alt-ctrl-7 = 'summon-workspace 7'
alt-ctrl-8 = 'summon-workspace 8'
alt-ctrl-9 = 'summon-workspace 9'
alt-ctrl-0 = 'summon-workspace 0'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
# 移动窗口到工作区 (数字工作区)
alt-shift-1 = 'move-node-to-workspace 1'
alt-shift-2 = 'move-node-to-workspace 2'
alt-shift-3 = 'move-node-to-workspace 3'
alt-shift-4 = 'move-node-to-workspace 4'
alt-shift-5 = 'move-node-to-workspace 5'
alt-shift-6 = 'move-node-to-workspace 6'
alt-shift-7 = 'move-node-to-workspace 7'
alt-shift-8 = 'move-node-to-workspace 8'
alt-shift-9 = 'move-node-to-workspace 9'
alt-shift-0 = 'move-node-to-workspace 0'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
alt-tab = 'workspace-back-and-forth'
# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
alt-shift-tab = ['move-workspace-to-monitor --wrap-around next']

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-shift-semicolon = 'mode service'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
b = ['balance-sizes']
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
f = [
  'layout floating tiling',
  'mode main',
] # Toggle between floating and tiling layout
backspace = ['close-all-windows-but-current', 'mode main']

# sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
#s = ['layout sticky tiling', 'mode main']

alt-shift-h = ['join-with left', 'mode main']
alt-shift-j = ['join-with down', 'mode main']
alt-shift-k = ['join-with up', 'mode main']
alt-shift-l = ['join-with right', 'mode main']

# 工作区与显示器的强制分配 - Office Mode
# 左侧竖屏显示器: 奇数工作区 (1,3,5,7,9)
# 右侧横屏显示器: 偶数工作区 (2,4,6,8,0)
[workspace-to-monitor-force-assignment]
1 = 'DELL P2417H'    # 左侧显示器 - 奇数
2 = 'DELL U2718QM'   # 右侧显示器 - 偶数
3 = 'DELL P2417H'    # 左侧显示器 - 奇数
4 = 'DELL U2718QM'   # 右侧显示器 - 偶数
5 = 'DELL P2417H'    # 左侧显示器 - 奇数
6 = 'DELL U2718QM'   # 右侧显示器 - 偶数
7 = 'DELL P2417H'    # 左侧显示器 - 奇数
8 = 'DELL U2718QM'   # 右侧显示器 - 偶数
9 = 'DELL P2417H'    # 左侧显示器 - 奇数
0 = 'DELL U2718QM'   # 右侧显示器 - 偶数

# 应用程序自动分配到工作区
[[on-window-detected]]
if.app-id = 'com.apple.finder'
run = ['layout floating']

# Note taking
[[on-window-detected]]
if.app-id = 'md.obsidian'
run = 'move-node-to-workspace 2'

# Browser
[[on-window-detected]]
if.app-id = 'com.google.Chrome'
run = 'move-node-to-workspace 2'

[[on-window-detected]]
if.app-id = 'com.google.Chrome.canary'
run = 'move-node-to-workspace 4'

# Chat
[[on-window-detected]]
if.app-id = 'com.tencent.xinWeChat'
run = 'move-node-to-workspace 2'

# Terminal
[[on-window-detected]]
if.app-id = 'com.mitchellh.ghostty'
run = 'move-node-to-workspace 1'

[[on-window-detected]]
if.app-id = 'com.jetbrains.intellij'
run = 'move-node-to-workspace 3'

[[on-window-detected]]
if.app-id = 'com.jetbrains.WebStorm'
run = 'move-node-to-workspace 5'

[[on-window-detected]]
if.app-id = 'com.kangfenmao.CherryStudio'
run = 'move-node-to-workspace 2'
